{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Book Lybrary System (BLS)",
        "description": "Endpoints to access the Book Lybrary System API ",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:5000",
    "basePath": "/",
    "tags": [
        {
            "name": "User",
            "description": "User endpoints"
        },
        {
            "name": "Category",
            "description": "Category endpoints"
        },
        {
            "name": "Author",
            "description": "Author endpoints"
        },
        {
            "name": "Book",
            "description": "Book endpoints"
        },
        {
            "name": "Logs",
            "description": "Logs endpoints"
        }
    ],
    "components": {
        "securitySchemes": {
            "token": {
                "name": "token",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "definitions": {
        "User": {
            "required": [
                "email",
                "name",
                "username",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "uniqueItems": true,
                    "example": "edvaldod@impact.com"
                },
                "name": {
                    "type": "string",
                    "example": "Edvaldo"
                },
                "username": {
                    "type": "string",
                    "uniqueItems": true,
                    "example": "Domingos"
                },
                "password": {
                    "type": "string",
                    "example": "theNewPass@"
                }
            }
        },
        "CreateUserResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "user_id": {
                            "type": "number",
                            "example": 15
                        },
                        "name": {
                            "type": "string",
                            "example": "Edvaldo"
                        },
                        "username": {
                            "type": "string",
                            "example": "Domingos"
                        },
                        "email": {
                            "type": "string",
                            "example": "edvaldod@impact.com"
                        },
                        "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXIxQGdtYWlsLmNvbSIsInVzZXJfaWQiOjYsIm5hbWUiOiJ1c2VyMSIsInVzZXJuYW1lIjoidXNlcjEiLCJpYXQiOjE2MDUzNzYwNTIsImV4cCI6MTYwNTgwODA1Mn0.mKVJIi9Lps9gxurBQmI7iIitmHkYtIPhJoZZk3NgJUw"
                        }
                    }
                }
            }
        },
        "SignInUser": {
            "required": [
                "username",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "uniqueItems": true,
                    "example": "Domingos"
                },
                "password": {
                    "type": "string",
                    "example": "theNewPass@"
                }
            }
        },
        "Category": {
            "required": [
                "name",
                "description"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "uniqueItems": true,
                    "example": "Action"
                },
                "description": {
                    "type": "string",
                    "example": "A film with a fast-moving plot , usually containing scenes of violence "
                }
            }
        },
        "CreateCategoryResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "category_id": {
                            "type": "number",
                            "example": 15
                        },
                        "name": {
                            "type": "string",
                            "example": "Action"
                        },
                        "description": {
                            "type": "string",
                            "example": "A film with a fast-moving plot , usually containing scenes of violence "
                        }
                    }
                }
            }
        },
        "GetCategoriesResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "category_id": {
                                "type": "number",
                                "example": 15
                            },
                            "name": {
                                "type": "string",
                                "example": "Action"
                            },
                            "description": {
                                "type": "string",
                                "example": "A film with a fast-moving plot , usually containing scenes of violence "
                            }
                        }
                    }
                }
            }
        },
        "DeleteCategoryResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Category deleted successfully"
                        }
                    }
                }
            }
        },
        "Author": {
            "required": [
                "first_name",
                "last_name"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "uniqueItems": true,
                    "example": "Edvaldo"
                },
                "last_name": {
                    "type": "string",
                    "example": "Domingos"
                }
            }
        },
        "CreateAuthorResponse": {
            "required": [
                "first_name",
                "last_name"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "author_id": {
                            "type": "number",
                            "example": 6
                        },
                        "first_name": {
                            "type": "string",
                            "uniqueItems": true,
                            "example": "Edvaldo"
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Domingos"
                        }
                    }
                }
            },
            "updateAuthor": {
                "required": [
                    "name",
                    "companies"
                ],
                "properties": {
                    "isPublic": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "books": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "GetAuthorsResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "success"
                            },
                            "data": {
                                "type": "object",
                                "properties": {
                                    "author_id": {
                                        "type": "number",
                                        "example": 6
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "uniqueItems": true,
                                        "example": "Edvaldo"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Domingos"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "DeleteAuthorResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Author deleted successfully"
                        }
                    }
                }
            }
        },
        "Book": {
            "required": [
                "author",
                "name",
                "categories",
                "isbn_number",
                "year_published"
            ],
            "properties": {
                "author": {
                    "type": "number",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "Clean Code"
                },
                "isbn_number": {
                    "type": "string",
                    "example": "102030"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "example": 3
                    }
                },
                "year_published": {
                    "type": "string",
                    "example": "2020"
                }
            }
        },
        "CreateBookResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "number",
                            "example": 5
                        },
                        "name": {
                            "type": "string",
                            "example": "Clean Code"
                        },
                        "isbn_number": {
                            "type": "string",
                            "example": "102030"
                        },
                        "categories": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "example": 15
                            }
                        },
                        "year_published": {
                            "type": "string",
                            "example": "2020"
                        }
                    }
                }
            }
        },
        "GetBooksResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "isbn_number": {
                            "author": {
                                "type": "string",
                                "example": "1471"
                            },
                            "book_name": {
                                "type": "string",
                                "example": "Clean Code"
                            },
                            "year_published": {
                                "type": "string",
                                "example": "2001"
                            },
                            "categories": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "number",
                                            "example": 5
                                        }
                                    }
                                }
                            },
                            "author_name": {
                                "type": "string",
                                "example": "Uncle Bob"
                            },
                            "author_last_name": {
                                "type": "string",
                                "example": "Uncle Bob Surname"
                            }
                        }
                    }
                }
            }
        },
        "UpdateBook": {
            "required": [
                "author",
                "name",
                "categories",
                "isbn_number",
                "year_published"
            ],
            "properties": {
                "author": {
                    "type": "number",
                    "example": 6
                },
                "name": {
                    "type": "string",
                    "example": "Clean Code"
                },
                "isbn_number": {
                    "type": "string",
                    "example": "201030"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "example": 1
                    }
                },
                "year_published": {
                    "type": "string",
                    "example": "2020"
                }
            }
        },
        "DeleteBookResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Book deleted successfully"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Sign up new User. Copy the token property from the response and use it as the JWT token to access protected routes",
                "requestBody": {
                    "required": true,
                    "description": "the user you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Copy the token property from the response and use it as the JWT token to access protected routes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateUserResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Sign In a User. Copy the token property from the response and use it as the JWT token to access protected routes",
                "requestBody": {
                    "required": true,
                    "description": "the user you want to sign in with",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/SignInUser"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Copy the token property from the response and use it as the JWT token to access protected routes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateUserResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create new Category",
                "requestBody": {
                    "required": true,
                    "description": "the category you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A category response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateCategoryResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all categories ",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "the name of the category we want to fetch",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of items to fetch",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "the row number from where you want to start fetching",
                        "required": true,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/GetCategoriesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category/{category_id}": {
            "parameters": [
                {
                    "name": "category_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of category that we want to find",
                    "type": "integer"
                }
            ],
            "put": {
                "summary": "Update category with given ID",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "the category you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category is updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateCategoryResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "get": {
                "summary": "Gets a category with given ID",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category is fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateCategoryResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete category with given ID",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category was deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/DeleteCategoryResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/author": {
            "post": {
                "tags": [
                    "Author"
                ],
                "summary": "Create new Author",
                "requestBody": {
                    "required": true,
                    "description": "the author you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Author"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A author response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateAuthorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Author"
                ],
                "summary": "Get all categories ",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "the name of the author",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "the last name of the author",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of items to fetch",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "the row number from where you want to start fetching",
                        "required": true,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/GetAuthorsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/author/{author_id}": {
            "parameters": [
                {
                    "name": "author_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of author that we want to find",
                    "type": "integer"
                }
            ],
            "put": {
                "summary": "Update author with given ID",
                "tags": [
                    "Author"
                ],
                "requestBody": {
                    "required": true,
                    "description": "the author you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Author"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Author is updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateAuthorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "get": {
                "summary": "Gets a author with given ID",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "Author is fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateAuthorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete author with given ID",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "Author was deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/DeleteAuthorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/book": {
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Create new Book",
                "requestBody": {
                    "required": true,
                    "description": "the book you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A book response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateBookResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get all books ",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "the category of the book",
                        "required": false,
                        "type": "string",
                        "example": "Action"
                    },
                    {
                        "name": "book_name",
                        "in": "query",
                        "description": "the name of the book",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "author_first_name",
                        "in": "query",
                        "description": "the first name of the author",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "author_last_name",
                        "in": "query",
                        "description": "the last name of the author",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isbn_number",
                        "in": "query",
                        "description": "the ISBN number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year_published",
                        "in": "query",
                        "description": "the Year published",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of items to fetch",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "the row number from where you want to start fetching",
                        "required": true,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/GetBooksResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/book/{isbn_number}": {
            "parameters": [
                {
                    "name": "isbn_number",
                    "in": "path",
                    "required": true,
                    "description": "ISBN of book that we want to find",
                    "type": "integer"
                }
            ],
            "put": {
                "summary": "Update book with given ISBN",
                "tags": [
                    "Book"
                ],
                "requestBody": {
                    "required": true,
                    "description": "the book you want to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UpdateBook"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book is updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateBookResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "get": {
                "summary": "Gets a book with given ISBN",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "200": {
                        "description": "Book is fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateBookResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete book with given ISBN",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "200": {
                        "description": "Author was deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/DeleteBookResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get all Logs performed on a Table including Operation, User, Old value and New Value, and Time performed",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "query",
                        "description": "the name of the table you want to chck logs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of items to fetch",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "the row number from where you want to start fetching",
                        "required": false,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/GetAuthorsResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}