{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Book Lybrary System (BLS)",
        "description": "Endpoints to access the Book Lybrary System API ",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:5000",
    "basePath": "/",
    "tags": [
        {
            "name": "Category",
            "description": "Category endpoints"
        },
        {
            "name": "Users",
            "description": "User endpoints"
        }
    ],
    "components": {
        "securitySchemes": {
            "token": {
                "name": "token",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "definitions": {
        "Category": {
            "required": [
                "name",
                "description"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "uniqueItems": true,
                    "example": "Action"
                },
                "description": {
                    "type": "string",
                    "example": "A film with a fast-moving plot , usually containing scenes of violence "
                }
            }
        },
        "CreateCategoryResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "category_id": {
                            "type": "number",
                            "example": 15
                        },
                        "name": {
                            "type": "string",
                            "example": "Action"
                        },
                        "description": {
                            "type": "string",
                            "example": "A film with a fast-moving plot , usually containing scenes of violence "
                        }
                    }
                }
            }
        },
        "GetCategoriesResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "category_id": {
                                "type": "number",
                                "example": 15
                            },
                            "name": {
                                "type": "string",
                                "example": "Action"
                            },
                            "description": {
                                "type": "string",
                                "example": "A film with a fast-moving plot , usually containing scenes of violence "
                            }
                        }
                    }
                }
            }
        },
        "DeleteCategoryResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Category deleted successfully"
                        }
                    }
                }
            }
        },
        "User": {
            "required": [
                "name",
                "_id",
                "companies"
            ],
            "properties": {
                "_id": {
                    "type": "integer",
                    "uniqueItems": true
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "books": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "number"
                            }
                        }
                    }
                },
                "companies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "updateUser": {
            "required": [
                "name",
                "companies"
            ],
            "properties": {
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "books": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "number"
                            }
                        }
                    }
                },
                "companies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Users": {
            "type": "array",
            "$ref": "#/definitions/User"
        }
    },
    "paths": {
        "/category": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create new Category",
                "requestBody": {
                    "required": true,
                    "description": "the category you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A category response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateCategoryResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all users in categories",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "the name of the category we want to fetch",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of items to fetch",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "the row number from where you want to start fetching",
                        "required": false,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/GetCategoriesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category/{category_id}": {
            "parameters": [
                {
                    "name": "category_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "integer"
                }
            ],
            "put": {
                "summary": "Update category with given ID",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "the category you want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category is updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateCategoryResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "get": {
                "summary": "Gets a category with given ID",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category is fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/CreateCategoryResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete category with given ID",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category was deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/DeleteCategoryResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/addUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Create new user in system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "put": {
                "summary": "Update user with give ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "integer"
                }
            ],
            "delete": {
                "summary": "Delete user with given ID",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User is deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        }
    }
}